generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  workflows Workflow[]
}

model Workflow {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  nodes       Node[]
  edges       Edge[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Node {
  id        String   @id @default(cuid())
  type      String
  positionX Float
  positionY Float
  data      Json
  workflowId String
  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  sourceEdges Edge[]  @relation("SourceNode")
  targetEdges Edge[]  @relation("TargetNode")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Edge {
  id         String   @id @default(cuid())
  source     String
  target     String
  sourceNodeId String
  targetNodeId String
  sourceNode Node     @relation("SourceNode", fields: [sourceNodeId], references: [id], onDelete: Cascade)
  targetNode Node     @relation("TargetNode", fields: [targetNodeId], references: [id], onDelete: Cascade)
  workflowId String
  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  data       Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
} 